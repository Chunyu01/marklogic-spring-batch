apply plugin: "com.jfrog.bintray"

dependencies {
    compile project(":core")
    compile "org.springframework.batch:spring-batch-core:$springBatchVersion"
    compile "com.marklogic:marklogic-client-api:4.0.3"
    compile "org.apache.tika:tika-parsers:1.17"

    testCompile project(':test')
    testCompile "com.marklogic:ml-junit:3.0.0"
}

ext {
    artifact = "spring-batch-file"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    baseName = artifact
    version = project.version
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    baseName = artifact
    version = project.version
}

publishing {
    publications {
        mainJavaWithSources(MavenPublication) {
            groupId group
            artifactId artifact
            version project.version
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_KEY')
    publications = [bintrayPublicationName]
    pkg {
        repo = bintrayRepo
        name = artifact
        userOrg = bintrayUserOrg
        licenses = [bintrayLicense]
        vcsUrl = bintrayVcsUrl
        version {
            name = project.version
            released = new Date()
            vcsTag = project.version
        }
    }
}

//task runJob(type: JavaExec) {
//    main = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'
//    classpath = sourceSets.test.runtimeClasspath
//    args = ["--job_path", "EnhancedResourceJobConfig",
//            "--job_id", "enhancedResourcesJob",
//            "--output_collections", "enhancedResourceJob",
//            "--chunk_size", "50",
//            "--thread_count", "1",
//            "--next"]
//}